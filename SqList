#include <iostream>
using namespace std;

const int MaxSize = 10;
typedef int ElemType;
typedef struct  {
	ElemType data[MaxSize];
	int length;
}SqList;

void InitList(SqList&);
void ListInsert(SqList&);
bool ListDelete(SqList&,int ,int&);
void PrintList(SqList);

int main()
{
	SqList L;
	InitList(L);
	ListInsert(L);
	PrintList(L);
	int e = 0;
	int i = 2;
	ListDelete(L, i, e);
	PrintList(L);
	return 0;
}

void InitList(SqList& L)
{
	for (int i = 0; i < MaxSize; i++)
	{
		L.data[i] = 0;
	}
	L.length = 0;
}

void ListInsert(SqList& L)
{
	int i = 0;
	cout << "the value of " << i + 1 << " is: ";
	cin >> L.data[i];
	L.length++;
	cout << "\n";
	while (cin && i < MaxSize-1)
	{
		i++;
		cout << "the value of" << i + 1 << "is: ";
		cin >> L.data[i];
		L.length++;
		cout << endl;
	}
}

bool ListDelete(SqList& L, int i, int& e)
{
	if (i<0 && i>L.length)
		return false;
	else
	{
		e =L. data[i - 1];
		for (; i < L.length; i++)
		{
			L.data[i - 1] = L.data[i];
		}
		L.length -= 1;
	}
}

void PrintList(SqList L)
{
	for (int i = 0; i < L.length; i++)
	{
		cout << i + 1 << "is: " << L.data[i] << endl;
	}
}
